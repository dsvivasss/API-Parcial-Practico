{
	"info": {
		"_postman_id": "2f6cb62b-aff7-4d61-88e8-545caf95799e",
		"name": "parcial-practico",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23995556",
		"_collection_link": "https://blue-satellite-537086.postman.co/workspace/Dise%25C3%25B1o-y-construcci%25C3%25B3n-de-APIs~04d8bfc8-fae8-4e72-9630-f20c330cbb03/collection/23995556-2f6cb62b-aff7-4d61-88e8-545caf95799e?action=share&source=collection_link&creator=23995556"
	},
	"item": [
		{
			"name": "airlines",
			"item": [
				{
					"name": "Create valid airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"airline_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Avianca\",\n    \"description\": \"Aerolinea con un bajo servicio a sus usuarios\",\n    \"date\": \"7/3/1973\",\n    \"website\": \"www.avianca.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airlines",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create invalid airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The date must be in the past\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Avianca\",\n    \"description\": \"Aerolinea con un bajo servicio a sus usuarios\",\n    \"date\": \"9/9/9999\",\n    \"website\": \"www.avianca.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airlines",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain all airlines",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of airlines > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/airlines",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain airline by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/airlines/{{airline_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain airline by wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The airline with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/airlines/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"LAN\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airlines/{{airline_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update wrong airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The airline with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"LAN\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airlines/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/airlines/{{airline_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete wrong airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The airline with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/airlines/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "airports",
			"item": [
				{
					"name": "Create valid airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"airport_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"El Dorado\",\n    \"code\": \"A11\",\n    \"country\": \"Colombia\",\n    \"city\": \"Bogota\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airports",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create invalid airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The airport code must be 3 characters long\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"El Dorado\",\n    \"code\": \"WRONG SIZE\",\n    \"country\": \"Colombia\",\n    \"city\": \"Bogota\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airports",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain all airports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of airports > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/airports",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain airport by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/airports/{{airport_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain airport by wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/airports/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airports",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Bogota Airport\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airports/{{airport_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update wrong airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Bogota airport\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airports/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airports",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/airports/{{airport_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete wrong airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/airports/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airports",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "airlines-airports",
			"item": [
				{
					"name": "Create valid airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"airline_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Avianca\",\n    \"description\": \"Aerolinea con un bajo servicio a sus usuarios\",\n    \"date\": \"7/3/1973\",\n    \"website\": \"www.avianca.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airlines",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create valid airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"airport_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"El Dorado\",\n    \"code\": \"A11\",\n    \"country\": \"Colombia\",\n    \"city\": \"Bogota\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airports",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create second valid airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"airport_id_2\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"El Dorado\",\n    \"code\": \"A11\",\n    \"country\": \"Colombia\",\n    \"city\": \"Bogota\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airports",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign airport to airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.globals.set(\"airline_id\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Avianca\",\n    \"description\": \"Aerolinea con un bajo servicio a sus usuarios\",\n    \"date\": \"7/3/1973\",\n    \"website\": \"www.avianca.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airlines/{{airline_id}}/airports/{{airport_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign wrong airport to airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Avianca\",\n    \"description\": \"Aerolinea con un bajo servicio a sus usuarios\",\n    \"date\": \"9/9/9999\",\n    \"website\": \"www.avianca.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airlines/{{airline_id}}/airports/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain all airports from airlines",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of airlines > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/airlines/{{airline_id}}/airports",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain airport from airlines",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/airlines/{{airline_id}}/airports/{{airport_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtain airport not linked to airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {",
									"   pm.response.to.have.status(412);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The airport with the given id is not associated to the airline\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/airlines/{{airline_id}}/airports/{{airport_id_2}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id_2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update airports from airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{airport_id}}\",\n        \"name\": \"El Dorado\",\n        \"code\": \"A11\",\n        \"country\": \"Colombia\",\n        \"city\": \"Bogota\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airlines/{{airline_id}}/airports/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update wrong airports on airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"00000000-0000-0000-0000-000000000000\",\n        \"name\": \"El Dorado\",\n        \"code\": \"A11\",\n        \"country\": \"Colombia\",\n        \"city\": \"Bogota\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/airlines/{{airline_id}}/airports/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete airport from airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/airlines/{{airline_id}}/airports/{{airport_id}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete airport not linked to airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/airlines/{{airline_id}}/airports/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{URL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "localhost:3000",
			"type": "string"
		}
	]
}